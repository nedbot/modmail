datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Thread {
  id Int @id @default(autoincrement()) @db.Integer

  status     ThreadStatus @default(OPEN)
  channel_id String?      @unique @db.VarChar(20)
  user_id    String       @db.VarChar(20)

  is_answered   Boolean       @default(false)
  interactions  Interaction[]
  subscriptions String[]

  created_at DateTime  @default(now()) @db.Timestamptz
  closed_at  DateTime? @db.Timestamptz

  @@map(name: "threads")
}

model Interaction {
  id Int @id @default(autoincrement()) @db.Integer

  type        InteractionType
  failed      Boolean         @default(false)
  author_id   String          @db.VarChar(20)
  content     String          @db.VarChar(2000)
  attachments Json[]

  thread_id Int    @db.Integer
  thread    Thread @relation(fields: [thread_id], references: [id])

  @@map(name: "interactions")
}

model User {
  id String @id @db.VarChar(20)

  blocked        Boolean   @default(false)
  blocked_at     DateTime? @db.Timestamptz
  blocked_reason String?   @db.VarChar(2000)

  @@map(name: "users")
}

enum ThreadStatus {
  OPEN
  CLOSED
  SUSPENDED
}

enum InteractionType {
  MODERATOR
  RECIPIENT
  COMMAND
  CHAT
}
